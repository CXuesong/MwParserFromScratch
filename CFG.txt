Notation
----------
NAME        Non-terminals
A/B         If the derivation attempt on A failed, then try B.
"text"      Text or regular expressions (depends on the context), where
                .       is a character except \n .
                \s      is a whitespace character including \n .
                {n}     matches the previous element exactly n times.
                {n,}    matches the previous element at least n times.
                +       matches the previous element at least once.
                +?      matches the previous element at least once, as few times as possible.
                
Terminator Sepcifications
>| "text"   Text or regular expressions used as a terminator (that terminates PLAIN_TEXT).
>|          There's no terminator for PLAIN_TEXT, and it can stretch to the end of the document.
+| "text"   The same as >| , except that it also inherits the terminators from the parent derivation.
            If there's no terminator sepcification for a derivation, by default it inherits terminators
            from the parent derviation.
-| "text"   Inherits terminators from the parent derviation, while prevents "text" from terminates PLAIN_TEXT.
            
My "CFG" representation of Wikitext
-------------------------------------
NOTE: I'm rather a newbie at this. If there's something
inappropriate or wrong with the following representation,
please notify me to fix or formalize it.

CXuesong, 2016
                  
# Basic
IDENTIFIER  -> [^>\s]       # Tag identifier
PLAIN_TEXT  -> ".+"         # Repeats until a terminator is met
                  
# Hierarchical & lexical syntax

WIKITEXT    -> LINE "\n" WIKITEXT / LINE / empty                # An empty WIKITEXT contains no children
            +| "\n"                                             # The last line has no trailing \n

LINE        -> LIST_ITEM / HEADING / PARAGRAPH / PARAGRAPH_COMPACT

LIST_ITEM   -> "[*#:;]+|-{4,}| " RUN?                           # Flatten the list hierarchy
                                                                # Note that "---- abcd" is valid
                                                                # Known Issue: Cannot handle code like
                                                                # ; Term : Defination
HEADING     -> "={6}" RUN "={6}"
                >| "={6}"
            /  "={5}" RUN "={5}"
                >| "={5}"
            /  ...
            /  "={1}" RUN "={1}"
                >| "={1}"
            +| "\n"
HORIZONTAL_RULER    -> "-{4,}" RUN?    

PARAGRAPH           -> RUN "\n" PARAGRAPH                       # Only when the next line cannot be parsed as LIST_ITEM or HEADING
                    /  RUN
                    /  empty   
PARAGRAPH_COMPACT   -> RUN                                      # The derivation used before LIST_ITEM / HEADING / $

RUN         -> INLINE RUN / INLINE
INLINE      -> EXPANDABLE / WIKI_LINK / EXTERNAL_LINK / FORMAT / PLAIN_TEXT
EXPANDABLE  -> TEMPLATE / ARGUMENT_REF / TAG / COMMENT          # COMMENT expands to ""

EXPANDABLE_TEXT -> EXPANDABLE EXPANDABLE_TEXT
                /  PLAIN_TEXT EXPANDABLE_TEXT
                /  EXPANDABLE
                /  PLAIN_TEXT
                /  empty
                
EXPANDABLE_URL  -> EXPANDABLE EXPANDABLE_URL
                /  EXPANDABLE
                /  URL

WIKI_LINK       -> "[[" EXPANDABLE_TEXT "]]" / "[[" EXPANDABLE_TEXT "|" RUN "]]"
                +| "]]" / "\n"
EXTERNAL_LINK   -> "[" EXPANDABLE_URL "[ \t]" RUN "]" / "[" EXPANDABLE_URL "]" / URL
                +| "]" / "\n"
FORMAT          -> '''RUN'''                                    # Known Issue: Cannot handle '''ab''cd'''efg''
                    +| "'''"
                /  ''RUN''
                    +| "''"

TEMPLATE        -> "{{" WIKITEXT TEMPLATE_ARGS "}}"
                >| "}}"
TEMPLATE_ARGS   -> "|" TEMPLATE_ARG TEMPLATE_ARGS / "|" TEMPLATE_ARG
                +| "|"
TEMPLATE_ARG    -> WIKITEXT "=" WIKITEXT / WIKITEXT             # [[abc|def]]={{def}} is valid!
ARGUMENT_REF    -> "{{{" WIKITEXT "|" WIKITEXT "}}}" / "{{{" WIKITEXT "}}}"
                +| "|"

TAG         -> "<" IDENTIFIER TAG_ATTRS ">" ".*?" "</" IDENTIFIER ">"
TAG_ATTRS   -> "\s+" TAG_ATTR TAG_ATTRS / "\s+" TAG_ATTR
TAG_ATTR    -> IDENTIFIER "\s*=\s*\"" "[^"]*" "\""              # <tag attr="value">
            /  IDENTIFIER "\s*=\s*'" "[^\s]*" "'"               # <tag attr='value'>
            /  IDENTIFIER "\s*=\s*" "[^\s]*"                    # <tag attr=value> or <tag attr= >
            /  IDENTIFIER "\s*"                                 # <tag attr>
            
COMMENT     -> "<!--" ".*?" "-->"
